# This is a basic workflow to help you get started with Actions

name: CI-arm

on:
  workflow_dispatch:



# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    name: Build on ${{ matrix.distro }} ${{ matrix.arch }}
#     strategy:
#       matrix:
#         include:
#           - arch: aarch64
#             distro: ubuntu18.04
    env:
      CC: arm-linux-gnueabi-gcc
      CXX: arm-linux-gnueabi-g++
      LD: arm-linux-gnueabi-ld
      AR: arm-linux-gnueabi-ar

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
         ref: master

      # Runs a single command using the runners shell
      - name: checkoutHttping
        run: git clone https://github.com/folkertvanheusden/HTTPing httping.git
      - name: patching_glibc 
        run: |
             cd httping.git 

             sed -i '/#include <fcntl.h>/a __asm__(".symver fcntl,fcntl@GLIBC_2.4");' io.c
             sed -i '/#include <math.h>/a __asm__(".symver pow,pow@GLIBC_2.4");' fft.c
             sed -i '/#include <math.h>/a __asm__(".symver pow,pow@GLIBC_2.4");' main.c
             sed -i '/#include <math.h>/a __asm__(".symver pow,pow@GLIBC_2.4");' nc.c
             sed -i '/#include <math.h>/a __asm__(".symver pow,pow@GLIBC_2.4");' gen.c
             cat gen.c
       
             cd ..
               
        
      # - name: patching-httping
      #   run: |
      #        cp httping_CMakeLists.txt httping.git/CMakeLists.txt 
      - name: Use Ubuntu 18.04 Docker Image
        run: |
          docker run --rm -v $(pwd):/workspace -w /workspace  homebrew/ubuntu18.04 bash -c "
          sudo apt remove --purge cmake
          sudo apt autoremove
          wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null &&
          echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic main' | tee /etc/apt/sources.list.d/kitware.list &&
          sudo apt-get update &&sudo apt-get install -y build-essential  libc6  texlive libssl-dev  libgmp-dev gettext autoconf pkg-config cmake   gcc-arm-linux-gnueabi
          cd httping.git&& sudo mkdir build &&cd build &&sudo CC=arm-linux-gnueabi-gcc CXX=arm-linux-gnueabi-g++ LD=arm-linux-gnueabi-ld AR=arm-linux-gnueabi-ar cmake -DNO_SSL=1 ..  &&sudo make  && sudo arm-linux-gnueabi-strip -s -x httping  &&sudo cp httping ../../httping 
          "        

      - name: dist
        run: git status &&git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com" &&  git config --local user.name "github-actions[bot]"   &&git add dnsmasq CHANGELOG httping &&git commit -m "update by bot"
      - uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
 #
